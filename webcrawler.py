# -*- coding: utf-8 -*-
"""WebCrawler.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Econ90yqfYe_NwIv8TgF8LCckom9Pa_J
"""

!pip install requests beautifulsoup4 openai langchain-openai

import requests
from bs4 import BeautifulSoup


def extract_text_from_url(url):

        response = requests.get(url)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            for script_or_style in soup(['script', 'style']):
                script_or_style.decompose()

            text = soup.get_text(separator= ' ')
            lines = (line.strip() for line in text.splitlines())
            chunks = (phrase.strip() for line in lines for phrase in line.split("  "))
            text = '\n'.join(chunk for chunk in chunks if chunk)
            return text
        else:
            print(f'Failed to retrieve the URL. Status code: {response.status_code}')
            return

        soup = BeautifulSoup(response.text, 'html.parser')
        text = soup.get_text()

        return text

extract_text_from_url('https://builtin.com/robotics')

from langchain_openai.chat_models.azure import AzureChatOpenAI

client = AzureChatOpenAI(
    azure_endpoint= "****",
    api_key= "*****",
    api_version= "2024-02-15-preview",
    deployment_name= "gpt-4o-mini",
    max_retries= 0
)

def tanslate_article(text, lang):
  messages = [
      ("system" , "VocÃª atua como tardutor de textos"),
      ("user", f"Traduza o {text} para o idioma {lang} e responda em markdown")
  ]

  response = client.invoke(messages)
  print(response.content)
  return response.content

tanslate_article("A robot is a programmable.", "portugues")

url = 'https://builtin.com/robotics'
text = extract_text_from_url(url)
article = tanslate_article(text, "pt-br")
print(article)